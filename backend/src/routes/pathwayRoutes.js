import express from "express";
import { authenticateToken, isAdmin } from "../middlewares/authMiddleware.js";
import {
  getClasses,
  getCycles,
  getClassesByCycle,
  getSubjectsByClass,
  createSubjectController,
  updateSubjectController,
  deleteSubjectController,
  getCategoriesBySubject,
  createCategoryController,
  updateCategoryController,
  deleteCategoryController,
  getThemesByCategory,
  createThemeController,
  updateThemeController,
  deleteThemeController,
  getPathwayContentController,
  updatePathwayContentController,
  getAllPathwaysController
} from "../controllers/pathwayController.js";

const router = express.Router();

/* ========================= CYCLES & CLASSES ========================= */

// ğŸ”¹ RÃ©cupÃ©rer la liste des cycles
router.get("/cycles", authenticateToken, isAdmin, getCycles);

// ğŸ”¹ RÃ©cupÃ©rer les classes dâ€™un cycle spÃ©cifique
router.get("/classes/:cycleId", authenticateToken, isAdmin, getClassesByCycle);

// ğŸ”¹ RÃ©cupÃ©rer toutes les classes disponibles (utilisÃ© pour les utilisateurs)
router.get("/classes", authenticateToken, getClasses);

/* ========================= SUBJECTS ========================= */

// ğŸ”¹ RÃ©cupÃ©rer les matiÃ¨res dâ€™une classe
router.get("/subjects/:classId", authenticateToken, isAdmin, getSubjectsByClass);

// ğŸ”¸ Ajouter une matiÃ¨re
router.post("/subjects", authenticateToken, isAdmin, createSubjectController);

// ğŸ”¸ Modifier une matiÃ¨re
router.put("/subjects/:subjectId", authenticateToken, isAdmin, updateSubjectController);

// ğŸ”¸ Supprimer une matiÃ¨re
router.delete("/subjects/:subjectId", authenticateToken, isAdmin, deleteSubjectController);

/* ========================= CATEGORIES ========================= */

// ğŸ”¹ RÃ©cupÃ©rer les catÃ©gories dâ€™une matiÃ¨re
router.get("/categories/:subjectId", authenticateToken, isAdmin, getCategoriesBySubject);

// ğŸ”¸ Ajouter une catÃ©gorie
router.post("/categories", authenticateToken, isAdmin, createCategoryController);

// ğŸ”¸ Modifier une catÃ©gorie
router.put("/categories/:categoryId", authenticateToken, isAdmin, updateCategoryController);

// ğŸ”¸ Supprimer une catÃ©gorie
router.delete("/categories/:categoryId", authenticateToken, isAdmin, deleteCategoryController);

/* ========================= THEMES ========================= */

// ğŸ”¹ RÃ©cupÃ©rer les thÃ¨mes dâ€™une catÃ©gorie
router.get("/themes/:categoryId", authenticateToken, isAdmin, getThemesByCategory);

// ğŸ”¸ Ajouter un thÃ¨me
router.post("/themes", authenticateToken, isAdmin, createThemeController);

// ğŸ”¸ Modifier un thÃ¨me
router.put("/themes/:themeId", authenticateToken, isAdmin, updateThemeController);

// ğŸ”¸ Supprimer un thÃ¨me
router.delete("/themes/:themeId", authenticateToken, isAdmin, deleteThemeController);

/* ========================= PATHWAY CONTENT ========================= */

// ğŸ”¸ RÃ©cupÃ©rer tout le contenu dâ€™un parcours (thÃ¨mes, leÃ§ons, exercices, etc.)
router.get("/:pathwayId/content", authenticateToken, isAdmin, getPathwayContentController);

// ğŸ”¸ Modifier le contenu dâ€™un parcours
router.put("/:pathwayId/content", authenticateToken, isAdmin, updatePathwayContentController);

// ğŸ”¹ RÃ©cupÃ©rer tous les parcours avec leÃ§ons et exercices
router.get("/", authenticateToken, isAdmin, getAllPathwaysController);

export default router;
